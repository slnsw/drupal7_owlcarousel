<?php

/**
 * @file
 * owlcarousel.module
 */

use Composer\InstalledVersions;

/**
 * Implements hook_theme().
 */
function owlcarousel_theme() {
  return array(
    'owlcarousel' => array(
      'variables' => array('items' => array(), 'settings' => array()),
      'file' => 'theme/owlcarousel.theme.inc',
    ),
    'owlcarousel_list' => array(
      'variables' => array('items' => array(), 'settings' => array()),
      'file' => 'theme/owlcarousel.theme.inc',
    ),
    'owlcarousel_list_item' => array(
      'variables' => array('item' => array(), 'class' => '', 'group' => ''),
      'file' => 'theme/owlcarousel.theme.inc',
    ),
    'owlcarousel_wrapper' => array(
      'variables' => array('output' => array()),
      'file' => 'theme/owlcarousel.theme.inc',
    ),
    'owlcarousel_admin_settings_form' => array(
      'render element' => 'form',
    ),
    'owlcarousel_admin_settings_form_fields' => array(
      'render element' => 'form',
    ),
  );
}

/**
 * Get the install path for a Composer package.
 */
function owlcarousel_composer_package_path(string $package): string {
  $versions = new InstalledVersions();
  return str_replace(DRUPAL_ROOT . '/', '', drupal_realpath($versions->getInstallPath($package)));
}

/**
 * Implements hook_library().
 */
function owlcarousel_library() {
  $owl_carousel_pkg = owlcarousel_composer_package_path('npm-asset/owl-carousel');
  $limit_js_pkg = owlcarousel_composer_package_path('bower-asset/limit');
  $owl_carousel_module = drupal_get_path('module', 'owlcarousel');

  $libraries['owl-carousel'] = array(
    'title' => 'Owl Carousel',
    'website' => 'http://owlgraphic.com/owlcarousel',
    'version' => array(),
    'js' => array(
      $owl_carousel_pkg . '/owl-carousel/owl.carousel.min.js' => array(
        'scope' => 'footer',
      ),
    ),
    'css' => array(
      $owl_carousel_module . '/includes/css/a11y.css' => array(
        'type' => 'file',
        'media' => 'screen',
      ),
      $owl_carousel_pkg . '/owl-carousel/owl.carousel.css' => array(
        'type' => 'file',
        'media' => 'screen',
      ),
      $owl_carousel_pkg . '/owl-carousel/owl.theme.css' => array(
        'type' => 'file',
        'media' => 'screen',
      ),
      $owl_carousel_pkg . '/owl-carousel/owl.transitions.css' => array(
        'type' => 'file',
        'media' => 'screen',
      ),
    ),
  );

  $libraries['limit-js'] = array(
    'title' => 'limit.js',
    'website' => 'https://github.com/m-gagne/limit.js',
    'version' => '0.1.0',
    'js' => array(
      $limit_js_pkg . '/limit.js' => array(
        'scope' => 'footer'
      )
    )
  );

  return $libraries;
}

/**
 * Return Owl Carousel settings array or default.
 *
 * @param string $instance
 *  Carousel instance settings machine name.
 */
function _owlcarousel_return_carousel_instance_settings($instance = 'owlcarousel_settings_default') {
  if ($settings_cache = cache_get('owlcarousel_' . $instance)) {
    $settings = $settings_cache->data;
  }
  else {
    $function = !module_exists('variable') ? 'variable_get' : 'variable_get_value';

    $settings = array(
      'items' => (int)$function('owlcarousel_items_' . $instance),
      'itemsDesktop' => array(
        $function('owlcarousel_items_desktop_' . $instance . '_width'),
        (int)$function('owlcarousel_items_desktop_' . $instance . '_items'),
      ),
      'itemsDesktopSmall' => array(
        $function('owlcarousel_items_desktop_small_' . $instance . '_width'),
        (int)$function('owlcarousel_items_desktop_small_' . $instance . '_items'),
      ),
      'itemsTablet' => array(
        $function('owlcarousel_items_tablet_' . $instance . '_width'),
        (int)$function('owlcarousel_items_tablet_' . $instance . '_items'),
      ),
      'itemsTabletSmall' => array(
        $function('owlcarousel_items_tablet_small_' . $instance . '_width'),
        (int)$function('owlcarousel_items_tablet_small_' . $instance . '_items'),
      ),
      'itemsMobile' => array(
        $function('owlcarousel_items_mobile_' . $instance . '_width'),
        (int)$function('owlcarousel_items_mobile_' . $instance . '_items'),
      ),
      'singleItem' => (boolean)$function('owlcarousel_single_item_' . $instance),
      'itemsScaleUp' => (boolean)$function('owlcarousel_items_scale_up_' . $instance),
      'slideSpeed' => (int)$function('owlcarousel_slide_speed_' . $instance),
      'paginationSpeed' => (int)$function('owlcarousel_pagination_speed_' . $instance),
      'rewindSpeed' => (int)$function('owlcarousel_rewind_speed_' . $instance),
      'autoPlay' => $function('owlcarousel_auto_play_' . $instance) ? $function('owlcarousel_auto_play_' . $instance) : FALSE,
      'stopOnHover' => (boolean)$function('owlcarousel_stop_on_hover_' . $instance),
      'navigation' => (boolean)$function('owlcarousel_navigation_' . $instance),
      'navigationText' => $function('owlcarousel_navigation_text_' . $instance),
      'rewindNav' => (boolean)$function('owlcarousel_rewind_nav_' . $instance),
      'scrollPerPage' => (boolean)$function('owlcarousel_scroll_per_page_' . $instance),
      'pagination' => (boolean)$function('owlcarousel_pagination_' . $instance),
      'paginationNumbers' => (boolean)$function('owlcarousel_pagination_numbers_' . $instance),
      'responsive' => (boolean)$function('owlcarousel_responsive_' . $instance),
      'responsiveRefreshRate' => (int)$function('owlcarousel_responsive_refresh_rate_' . $instance),
      'baseClass' => $function('owlcarousel_base_class_' . $instance),
      'theme' => $function('owlcarousel_theme_' . $instance),
      'lazyLoad' => (boolean)$function('owlcarousel_lazy_load_' . $instance),
      'lazyFollow' => (boolean)$function('owlcarousel_lazy_follow_' . $instance),
      'lazyEffect' => $function('owlcarousel_lazy_effect_' . $instance),
      'autoHeight' => (boolean)$function('owlcarousel_auto_height_' . $instance),
      'jsonPath' => $function('owlcarousel_json_path_' . $instance) ? $function('owlcarousel_json_path_' . $instance) : FALSE,
      'jsonSuccess' => $function('owlcarousel_json_success_' . $instance) ? $function('owlcarousel_json_success_' . $instance) : FALSE,
      'dragBeforeAnimFinish' => (boolean)$function('owlcarousel_drag_before_anim_finish_' . $instance),
      'mouseDrag' => (boolean)$function('owlcarousel_mouse_drag_' . $instance),
      'touchDrag' => (boolean)$function('owlcarousel_touch_drag_' . $instance),
      'addClassActive' => (boolean)$function('owlcarousel_add_class_active_' . $instance),
      'transitionStyle' => $function('owlcarousel_transition_style_' . $instance) ? $function('owlcarousel_transition_style_' . $instance) : FALSE,
    );

    // Update settings cache.
    cache_set('owlcarousel_' . $instance, $settings, 'cache');
  }

  return $settings;
}

/**
 * Return array with key pair.
 */
function owlcarousel_instance_callback_list() {
  $results = &drupal_static(__FUNCTION__);

  if (!isset($results)) {
    $instances = _owlcarousel_return_instances();

    // Format array as callback option list.
    foreach ($instances as $instance) {
      $results[$instance->name] = $instance->name;
    }
  }

  return $results;
}

/**
 * Helper function, return active instances by name.
 */
function _owlcarousel_return_instances($name = FALSE) {
  $query = 'SELECT name FROM {variable} WHERE name LIKE :name';

  if (!$name) {
    $results = db_query($query, array(':name' => db_like('owlcarousel_settings_') . '%'))->fetchAll();
  }
  else {
    $results = db_query($query, array(':name' => $name))->fetchField();
  }

  return $results;
}
